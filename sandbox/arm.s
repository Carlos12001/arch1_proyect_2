.global _start
.section .data
text: .ascii "LOREM IPSUM DOLOR SIT AMET, CONSECTETUER ADIPISCING ELIT. AENEAN COMMODO LIGULA EGET DOLOR. AENEAN MASSA. CUM SOCIIS NATOQUE PENATIBUS ET MAGNIS DIS PARTURIENT MONTES, NASCETUR RIDICULUS MUS. DONEC QUAM FELIS, ULTRICIES NEC, PELLENTESQUE EU, PRETIUM QUIS, SEM. NULLA CONSEQUAT MASSA QUIS ENIM. DONEC PEDE JUSTO, FRINGILLA VEL, ALIQUET NEC, VULPUTATE EGET, ARCU. IN ENIM JUSTO, RHONCUS UT, IMPERDIET A, VENENATIS VITAE, JUSTO. NULLAM DICTUM FELIS EU PEDE MOLLIS PRETIUM. INTEGER TINCIDUNT. CRAS DAPIBUS. VIVAMUS ELEMENTUM SEMPER NISI. AENEAN VULPUTATE ELEIFEND TELLUS. AENEAN LEO LIGULA, PORTTITOR EU, CONSEQUAT VITAE, ELEIFEND AC, ENIM. ALIQUAM LOREM ANTE, DAPIBUS IN, VIVERRA QUIS, FEUGIAT A. "
puntos: .word 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
        .word 255,255,255,255,255,255,255,255,255,255
        .word 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
        .word 255,255,255,255,255,255,255,255,255,255
.section .text

abs:
push {lr}
lsr r1, r0, #31
add r2, r0, r1
orr r3, r2, r1
mov r0, r3
pop {lr}
mov pc, lr

_start:
ldr r1, =text    @ dirección del mensaje
parada:
ldrb r0, [r1]
ldr r0, =0xFFFFFFCE
bl abs
mov r1, r0


# Salir del programa
mov r0, #0          @ código de salida
mov r7, #1          @ syscall exit
swi 0               @ invocar syscall
